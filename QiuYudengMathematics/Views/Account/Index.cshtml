@model Dictionary<int, string>

<div id="app" class="account">
    <div>
        <input type="button" value="Query" onclick="Query()" />
        <input type="button" value="SingleQuery" onclick="SingleQuery()" />
        <input type="button" value="Add" onclick="Add()" />
        <input type="button" value="Update" onclick="Update()" />
    </div>
    <div class="account__container">
        <div class="account__search-bar--flex">
            <input @@input="onInput($event)" placeholder="請輸入姓名" type="search">
            <div class="account__btn-wrapper">
                <a @@click="" class="btn">新增</a>
            </div>
        </div>
        <div class="account__table">
            <div class="account__tr">
                <div class="account__th">帳號</div>
                <div class="account__th">姓名</div>
                <div class="account__th">年級</div>
                <div class="account__th">狀態</div>
                <div class="account__th">管理</div>
            </div>
            <div class="account__tr" v-for="item in curList" :key="item.Account">
                <div class="account__td">{{item.Account}}</div>
                <div class="account__td">{{item.Name}}</div>
                <div class="account__td">{{item.Grade}}</div>
                <div class="account__td">
                    <i v-if="item.Enable" style="color:forestgreen" class="far fa-circle"></i>
                    <i v-else style="color:red" class="fas fa-times"></i>
                </div>
                <div class="account__td"><a @@click.prevent="manage(item.Account)"><i class="fas fa-cog"></i></a></div>
            </div>
        </div>
    </div>
    @*<div class="account__popup--wrapper">
        <div class="account__popup">
            <div>管理</div>
            <div>帳號 : <input /></div>
            <div>姓名 : <input /></div>
            <div>狀態 : <input /></div>
            <div>科目 : <input /></div>
        </div>
    </div>*@
</div>


<script type="text/javascript">
    const vm = new Vue({
        el: '#app',
        data: {
            manageAcc: {},
            curList:[],
            rawList:[],
            info: {
                Account: '',
                Name: '',
                Grade: null,
                Enable: true,
                Subject: []
            },
            SUBJECT_ENUM: {

            }
        },
        mounted() {
            const data = {
                Name: '',
                Grade: null,
            }
            axios.post('@Url.Content("/Account/Query")', data)
                .then(res => {
                    this.rawList = res.data.Data;
                    this.curList = this.rawList
                })
        },
        computed: {
        },
        methods: {
            onInput(e) {
                if (e) {
                    this.curList = this.rawList.filter(item =>
                        item.Name.toLowerCase().indexOf(e.target.value.toLowerCase()) >= 0)
                } else {
                    this.curList = this.rawList
                }
            },
            manage(val) {
                axios.post('@Url.Content("/Account/SingleQuery?Id=")' + `${val}`)
                    .then(res => {
                        console.log('msg',res.data.Msg)
                        console.log(res.data.Data)
                        this.info.Account = res.data.Data.Account
                        this.info.Name = res.data.Data.Name
                        this.info.Grade = res.data.Data.Grade
                        this.info.Subject = res.data.Data.Subject
                    })
            }
        }
    });


    function Query() {
        var data = {
            Name: '',
            Grade: null,
            Enable: true
        };
        axios.post('@Url.Content("/Account/Query")', data, function (x) {
            console.log(x);
        });
    };
    function SingleQuery() {
        $.post('@Url.Content("/Account/SingleQuery?Id=")' + '000001', function (x) {
             alert(x.Success);
            console.log(x.Data);
        });
    };
    function Add() {
        var data = {
            Name: "Test",
            Grade: 2,
            Enable: false,
            Subject: [5,7]
        };
        $.post('@Url.Content("/Account/Insert")',data, function (x) {
            alert(x.Msg);
        });
    };
    function Update() {
        var data = {
            Account: "000001",
            Name: "Test",
            Grade: 3,
            Enable: true,
            Subject: [10,11,13]
        };
        $.post('@Url.Content("/Account/Update")',data, function (x) {
            alert(x.Msg);
        });
    };
</script>
